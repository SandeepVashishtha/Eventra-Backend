# Example Environment Configuration for Aiven MySQL
# Copy this file to .env or set these as environment variables

# ===========================================
# AIVEN MYSQL DATABASE CONFIGURATION
# ===========================================

# Replace these values with your actual Aiven MySQL connection details
# Get these from your Aiven Console: https://console.aiven.io/

# Example format: jdbc:mysql://mysql-abc123-def456.a.aivencloud.com:12345/defaultdb?useSSL=true&requireSSL=true&verifyServerCertificate=false&useUnicode=true&characterEncoding=utf8
AIVEN_DATABASE_URL=jdbc:mysql://YOUR_AIVEN_HOST:PORT/YOUR_DATABASE_NAME?useSSL=true&requireSSL=true&verifyServerCertificate=false&useUnicode=true&characterEncoding=utf8

# Your Aiven MySQL username (usually starts with 'avnadmin')
AIVEN_DATABASE_USERNAME=your_aiven_username

# Your Aiven MySQL password
AIVEN_DATABASE_PASSWORD=your_aiven_password

# For production deployments, also set these:
DATABASE_DRIVER=com.mysql.cj.jdbc.Driver
DATABASE_DIALECT=org.hibernate.dialect.MySQL8Dialect
DDL_AUTO=update
SHOW_SQL=false

# ===========================================
# OTHER CONFIGURATION (KEEP AS IS)
# ===========================================

# JWT Configuration
JWT_SECRET=your_jwt_secret_key_here
JWT_EXPIRATION=86400000

# Logging
LOG_LEVEL=INFO
SECURITY_LOG_LEVEL=WARN

# CORS (update with your frontend URL)
CORS_ALLOWED_ORIGINS=https://eventra-psi.vercel.app

# Connection Pool Settings
DB_MAX_POOL_SIZE=20
DB_MIN_IDLE=5
DB_CONNECTION_TIMEOUT=30000
DB_IDLE_TIMEOUT=600000
DB_MAX_LIFETIME=1800000

# ===========================================
# INSTRUCTIONS
# ===========================================

# 1. Log in to Aiven Console: https://console.aiven.io/
# 2. Navigate to your MySQL service
# 3. Copy the connection details:
#    - Service URI (host and port)
#    - Username
#    - Password
#    - Database name
# 4. Replace the placeholder values above
# 5. Set these as environment variables or use with Docker/deployment

# For local development with MySQL profile:
# export $(cat .env | grep -v ^# | xargs) && mvn spring-boot:run -Dspring.profiles.active=mysql

# For production deployment:
# Set these environment variables in your deployment platform (Azure App Service, Docker, etc.)
